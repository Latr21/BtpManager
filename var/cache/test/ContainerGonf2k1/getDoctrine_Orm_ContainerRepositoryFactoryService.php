<?php

namespace ContainerGonf2k1;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getDoctrine_Orm_ContainerRepositoryFactoryService extends App_KernelTestDebugContainer
{
    /**
     * Gets the private 'doctrine.orm.container_repository_factory' shared service.
     *
     * @return \Doctrine\Bundle\DoctrineBundle\Repository\ContainerRepositoryFactory
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/doctrine/orm/src/Repository/RepositoryFactory.php';
        include_once \dirname(__DIR__, 4).'/vendor/doctrine/doctrine-bundle/src/Repository/RepositoryFactoryCompatibility.php';
        include_once \dirname(__DIR__, 4).'/vendor/doctrine/doctrine-bundle/src/Repository/ContainerRepositoryFactory.php';

        return $container->privates['doctrine.orm.container_repository_factory'] = new \Doctrine\Bundle\DoctrineBundle\Repository\ContainerRepositoryFactory(new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($container->getService ??= $container->getService(...), [
            'App\\Repository\\AffectationRepository' => ['privates', 'App\\Repository\\AffectationRepository', 'getAffectationRepositoryService', true],
            'App\\Repository\\ChantierRepository' => ['privates', 'App\\Repository\\ChantierRepository', 'getChantierRepositoryService', true],
            'App\\Repository\\EquipeRepository' => ['privates', 'App\\Repository\\EquipeRepository', 'getEquipeRepositoryService', true],
            'App\\Repository\\OuvrierRepository' => ['privates', 'App\\Repository\\OuvrierRepository', 'getOuvrierRepositoryService', true],
        ], [
            'App\\Repository\\AffectationRepository' => '?',
            'App\\Repository\\ChantierRepository' => '?',
            'App\\Repository\\EquipeRepository' => '?',
            'App\\Repository\\OuvrierRepository' => '?',
        ]));
    }
}
