<?php

namespace Proxies\__CG__\App\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Chantier extends \App\Entity\Chantier implements \Doctrine\ORM\Proxy\InternalProxy
{
    use \Symfony\Component\VarExporter\LazyGhostTrait {
        initializeLazyObject as private;
        setLazyObjectAsInitialized as public __setInitialized;
        isLazyObjectInitialized as private;
        createLazyGhost as private;
        resetLazyObject as private;
    }

    public function __load(): void
    {
        $this->initializeLazyObject();
    }
    

    private const LAZY_OBJECT_PROPERTY_SCOPES = [
        "\0".parent::class."\0".'affectations' => [parent::class, 'affectations', null],
        "\0".parent::class."\0".'chantier_prerequis' => [parent::class, 'chantier_prerequis', null],
        "\0".parent::class."\0".'chef_chantier' => [parent::class, 'chef_chantier', null],
        "\0".parent::class."\0".'date_debut' => [parent::class, 'date_debut', null],
        "\0".parent::class."\0".'date_fin' => [parent::class, 'date_fin', null],
        "\0".parent::class."\0".'effectif_requis' => [parent::class, 'effectif_requis', null],
        "\0".parent::class."\0".'equipe' => [parent::class, 'equipe', null],
        "\0".parent::class."\0".'id' => [parent::class, 'id', null],
        "\0".parent::class."\0".'image' => [parent::class, 'image', null],
        "\0".parent::class."\0".'nom' => [parent::class, 'nom', null],
        'affectations' => [parent::class, 'affectations', null],
        'chantier_prerequis' => [parent::class, 'chantier_prerequis', null],
        'chef_chantier' => [parent::class, 'chef_chantier', null],
        'date_debut' => [parent::class, 'date_debut', null],
        'date_fin' => [parent::class, 'date_fin', null],
        'effectif_requis' => [parent::class, 'effectif_requis', null],
        'equipe' => [parent::class, 'equipe', null],
        'id' => [parent::class, 'id', null],
        'image' => [parent::class, 'image', null],
        'nom' => [parent::class, 'nom', null],
    ];

    public function __isInitialized(): bool
    {
        return isset($this->lazyObjectState) && $this->isLazyObjectInitialized();
    }

    public function __serialize(): array
    {
        $properties = (array) $this;
        unset($properties["\0" . self::class . "\0lazyObjectState"]);

        return $properties;
    }
}
